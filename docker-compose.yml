version: "3"

services:
  postgres:
    build:
      context: ./data
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 5432:5432
    restart: always
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 5431:80
    env_file:
      - .env
    depends_on:
      - postgres
    links:
      - postgres
    networks:
      - app_network

  api:
    hostname: cinevoraces_api
    env_file:
      - .env
    depends_on:
      - postgres
    # links:
    #   - postgres
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - 3005:3005
    restart: always
    volumes:
      - ./api:/api
    networks:
      - app_network

  app:
    hostname: cinevoraces_app
    env_file:
      - .env
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    restart: always
    volumes:
      - ./app:/app
    depends_on:
      - api
    networks:
      - app_network

networks:
  app_network:
  
  # nginx:
  #   depends_on:
  #     - app
  #     - api
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   ports: 
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./nginx/conf/:/etc/nginx/conf.d/
  #     - ./certbot/www:/var/www/certbot/
  #     - ./certbot/conf/:/etc/nginx/ssl/

  # certbot:
  #   image: certbot/certbot:latest
  #   volumes:
  #     - ./certbot/www/:/var/www/certbot/
  #     - ./certbot/conf/:/etc/letsencrypt/
